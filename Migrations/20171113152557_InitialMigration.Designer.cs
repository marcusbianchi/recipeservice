// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using recipeservice.Data;
using System;

namespace recipeservice.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20171113152557_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("recipeservice.Model.Phase", b =>
                {
                    b.Property<int>("phaseId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("phaseCode")
                        .HasMaxLength(100);

                    b.Property<string>("phaseName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("phaseId");

                    b.ToTable("Phases");
                });

            modelBuilder.Entity("recipeservice.Model.PhaseParameter", b =>
                {
                    b.Property<int>("phaseParameterId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("maxValue");

                    b.Property<string>("measurementUnit");

                    b.Property<string>("minValue");

                    b.Property<int>("parameterId");

                    b.Property<int?>("phaseId");

                    b.Property<string>("setupValue");

                    b.HasKey("phaseParameterId");

                    b.HasIndex("phaseId");

                    b.ToTable("PhaseParameters");
                });

            modelBuilder.Entity("recipeservice.Model.PhaseProduct", b =>
                {
                    b.Property<int>("phaseProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("measurementUnit");

                    b.Property<int?>("phaseId");

                    b.Property<int?>("phaseId1");

                    b.Property<int>("productId");

                    b.Property<string>("setupValue");

                    b.HasKey("phaseProductId");

                    b.HasIndex("phaseId");

                    b.HasIndex("phaseId1");

                    b.ToTable("PhaseProducts");
                });

            modelBuilder.Entity("recipeservice.Model.PhaseParameter", b =>
                {
                    b.HasOne("recipeservice.Model.Phase")
                        .WithMany("phaseParameters")
                        .HasForeignKey("phaseId");
                });

            modelBuilder.Entity("recipeservice.Model.PhaseProduct", b =>
                {
                    b.HasOne("recipeservice.Model.Phase")
                        .WithMany("inputProducts")
                        .HasForeignKey("phaseId");

                    b.HasOne("recipeservice.Model.Phase")
                        .WithMany("outputProducts")
                        .HasForeignKey("phaseId1");
                });
#pragma warning restore 612, 618
        }
    }
}
